/******************************
 * Android-console subsystem
 * PUT << Resource file CR.java generated by script makeCR
 * (https://github.com/vv73/AndroidCRQ/blob/master/makeCR.py)
 * TO  >> Support Files
 *****************************/
import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.HashMap;

class R extends CR {
}

class Context {
	public Context getApplicationContext() {
		return this;
	}
	
	public String getPackageName()
	{
		return "android.console.subsystem";
	}
	
	
	public Resources getResourses(){
		return new Resources();
	}
}

class Bundle {
}

interface OnClickListener extends View.OnClickListener {
}

class View {
	public int id;
	private Context context;
	private OnClickListener listener;

	public interface OnClickListener {
		public void onClick(View view);
	}

	

	public View(Context context, int id) {
		this.context = context;
		this.id = id;
	}

	public void setOnClickListener(OnClickListener listener) {
		this.listener = listener;
	}

	public void click() {
		if (listener != null)
			listener.onClick(this);
	}

	public String getAttribute(String attr) {
		return R.resourses[id].attrs.get(attr);
	}
	Context getContext()
	{
		return context;
	}

}

class FrameLayout extends View {
	public FrameLayout(Context context, int id) {
		super(context, id);
	}
}

class LinearLayout extends View {
	public LinearLayout(Context context, int id) {
		super(context, id);
	}
}

class RelativeLayout extends View {
	public RelativeLayout(Context context, int id) {
		super(context, id);
	}
}

class TextView extends View {
	protected String text;

	public TextView(Context context, int id) {
		super(context, id);
		text = getAttribute("android:text");
		if (text.startsWith("@string/"))
		{
			int textId = getContext().getResourses().getIdentifier(text.substring(8), "string", getContext().getPackageName());
			setText(textId);
			
		}		
	}

	public void setText(int id) {
		this.text = R.resourses[id].value;
		AppTest.Log(this, "text_change '" + this.text + "'");
	}

	public void setText(CharSequence text) {
		this.text = text.toString();
		AppTest.Log(this, "text_change '" + this.text + "'");
	}
	
	public void append(CharSequence text) {
		this.text = this.getText().toString() + text.toString();
		AppTest.Log(this, "text_change '" + this.text + "'");
	}


	public CharSequence getText() {
		return this.text;
	}

}

class EditText extends TextView {
	public EditText(Context context, int id) {
		super(context, id);
	}
}

class Button extends TextView {

	public Button(Context context, int id) {
		super(context, id);
	}

}

class ImageView extends View {
	private int drawableId = -1;

	public ImageView(Context context, int id) {
		super(context, id);
	    drawableId = -1;

	}

	public void setImageResource(int resId) {
		drawableId = resId;
	}

	int getDrawableId() {
		return drawableId;
	}
}

// TOAST CLASS
class Toast {
	public static final int LENGTH_SHORT = 0;
	public static final int LENGTH_LONG = 1;

	private String text;
	private int duration;

	public Toast(Context context, String text, int duration) {
		this.text = text;
		this.duration = duration == 1 ? 3500 : 2500;
	}

	public static Toast makeText(Context context, String text, int duration) {
		return new Toast(context, text, duration);
	}

	public static Toast makeText(Context context, int stringId, int duration) {
		return new Toast(context, R.resourses[stringId].value, duration);
	}

	public void show() {
		// TODO: Add action to log;
		// AppTest.Log("Toast", (this.duration == 3500 ? "LENGTH_LONG '" :
		// "LENGTH_SHORT '") + this.text + "'");
		System.out.println("TOAST: " + this.text);
	}
}

class Resources
{
	public Resources(){}
	
	String getString(int id)
	{
		return R.resourses[id].value;
	}
	
	int getIdentifier(String propertyName, String type, String packageName)
	{  
		for (int i = 0; i < R.resourses.length; i++) 
		{
			if (R.resourses[i].type.equals(type) && 
				R.resourses[i].attrs.get("name").equals(propertyName))
				return i;
		}
		return -1;
	}
	
}


	class Activity extends Context {

		private View rootView;
		private HashMap<Integer, View> views = new HashMap<Integer, View>();

		protected void onCreate(Bundle savedInstanceState) {
		}

		private View getViewFromResources(int id) {
			if (id < 0 || id >= R.resourses.length)
				return null;
			try {
				Class<?> c = Class.forName(R.resourses[id].type);
				Constructor<?> cons = c.getConstructor(Context.class, Integer.TYPE);
				Object object = cons.newInstance(this, id);
				return (View) object;
			} catch (Exception e) {
				System.out.println(" getViewFromResources EXCEPTION");
				e.printStackTrace();
			}
			return null;
		}

		public void setContentView(int rootId) {
			rootView = getViewFromResources(rootId);
			views.clear();
			views.put(rootId, rootView);
			for (int i : R.resourses[rootId].childs) {
				views.put(i, getViewFromResources(i));
			}
		}

		public View findViewById(int id) {
			return views.get(id);
		}

	}

	class AppCompatActivity extends Activity {
	}

	// MAIN TESTER CLASS
	class AppTest {
		public static Activity activity;
		public static ArrayList<String> log = new ArrayList<String>();

		public static void setActivity(Activity act) {
			activity = act;
		}

		public static void runActivity() {
			activity.onCreate(new Bundle());
		}

		public static void doTap(int id) {
			activity.findViewById(id).click();
		}
		
		public static void doTap(View v) {
			v.click();
		}
		public static void Log(int id, String message) {
			Log(activity.findViewById(id), message);
		}

		public static void Log(View view, String message) {
			log.add(view.getAttribute("type") + " R.id." + view.getAttribute("name") + " " + message);
		}

		public static void Log(String name, String message) {
			log.add(name + " " + message);
		}
		
		public static String getStringfromRByName(String name)
		{
			Resources r = activity.getResourses();
			int id = r.getIdentifier(name, "string", activity.getPackageName());
			return r.getString(id);
		}
	}
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

public class Test {
	public static void main(String[] args) {
		AppTest.setActivity(new MainActivity());
		AppTest.runActivity();
		{{TEST.testcode}}
	}
}

{{ STUDENT_ANSWER | replace({'public class ': 'class '}) }}
